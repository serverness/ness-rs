[workspace]
members = [
  "serverness-cli",
  "serverness-httpmock",
  "serverness",
  "serverness-shell",
  "xtask",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
edition = "2021"
authors = ["Art Semyonov"]

[workspace.dependencies]
anyhow = "1.0.95"
clap = { version = "4.5.30", features = [
  "derive",
  "string",
  "env",
  "wrap_help",
] }
progenitor = { path = "../progenitor/progenitor", default-features = false }
progenitor-client = "0.9.1"
serde = "1.0.217"
serde_json = "1.0.138"
newline-converter = "0.3.0"
decimal = "2.1.0"
regex = "1.11.1"
rustfmt-wrapper = "0.2.1"
regress = "0.10.3"
reqwest = "0.12.12"
bigdecimal = { version = "0.4.7", features = ["serde"] }
chrono = { version = "0.4.39", features = ["serde"] }
futures = "0.3.31"
schemars = { version = "0.8.21", features = [
  "bigdecimal04",
  "chrono",
  "derive",
  "uuid",
  "uuid1",
] }
uuid = { version = "1.13.2", features = ["v7", "serde"] }
serverness = { path = "serverness" }
nu-protocol = { path = "../nushell/crates/nu-protocol" }
nu-cli = { path = "../nushell/crates/nu-cli" }
nu-cmd-base = { path = "../nushell/crates/nu-cmd-base" }
nu-cmd-extra = { path = "../nushell/crates/nu-cmd-extra" }
nu-cmd-lang = { path = "../nushell/crates/nu-cmd-lang" }
nu-cmd-plugin = { path = "../nushell/crates/nu-cmd-plugin" }
nu-command = { path = "../nushell/crates/nu-command" }
nu-engine = { path = "../nushell/crates/nu-engine" }
nu-explore = { path = "../nushell/crates/nu-explore" }
nu-parser = { path = "../nushell/crates/nu-parser" }
nu-path = { path = "../nushell/crates/nu-path" }
nu-plugin = { path = "../nushell/crates/nu-plugin" }
nu-plugin-engine = { path = "../nushell/crates/nu-plugin-engine" }
nu-system = { path = "../nushell/crates/nu-system" }
nu-utils = { path = "../nushell/crates/nu-utils" }
